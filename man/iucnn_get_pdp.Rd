% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iucnn_get_pdp.R
\name{iucnn_get_pdp}
\alias{iucnn_get_pdp}
\title{Get partial dependence probabilities for IUCN Categories}
\usage{
iucnn_get_pdp(
  x,
  dropout_reps = 100,
  feature_blocks = list(),
  include_all_features = FALSE,
  provide_indices = FALSE
)
}
\arguments{
\item{x}{iucnn_model object, as produced as output
when running \code{\link{iucnn_train_model}}}

\item{dropout_reps}{integer, (default = 100). The number of how often the
predictions are to be repeated (only for dropout models). A value of 100 is
recommended to capture the stochasticity of the predictions, lower values
speed up the prediction time.}

\item{feature_blocks}{a list of features for which the PDP should be obtained.
One hot encoded features should be grouped (see example)}

\item{include_all_features}{logical (default = FALSE). IF FALSE, PDPs will be
only obtained for the features in the feature_blocks. If TRUE, PDPs will be
calculated for all feature.}

\item{provide_indices}{logical. Set to TRUE if custom \code{feature_blocks}
are provided as indices. Default is FALSE.}
}
\value{
A list named according to the feature block with the gradient of the
feature and the partial dependence probabilities for the IUCN category.
When the model has been trained with dropout, the output includes a
95\% prediction interval.
}
\description{
Get partial dependence probabilities for IUCN Categories
}
\note{
See \code{vignette("Approximate_IUCN_Red_List_assessments_with_IUCNN")}
for a tutorial on how to run IUCNN and \code{\link{plot.iucnn_pdp}} for plotting
options.
}
\examples{
\dontrun{
data("training_occ")
data("training_labels")

train_feat <- iucnn_prepare_features(training_occ, type = "geographic")

# create fake one-hot encoded categorical feature
train_feat$yellow <- 0
train_feat$yellow[1:300] <- 1
train_feat$blue <- 0
train_feat$blue[301:600] <- 1
train_feat$red <- 0
train_feat$red[601:nrow(train_feat)] <- 1
labels_train <- iucnn_prepare_labels(training_labels, train_feat,
                                    level = 'detail')

train_output <- iucnn_train_model(x = train_feat,
                                 lab = labels_train,
                                 patience = 10,
                                 overwrite = TRUE)


feature_blocks <- list(color = c('yellow', 'blue', 'red'), aoo = 'aoo')
pdp <- iucnn_get_pdp(x = train_output,
                    dropout_reps = 10,
                    feature_blocks = feature_blocks)
}

# plot partial dependence probabilities
plot(pdp)

}
